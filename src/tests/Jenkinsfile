properties([
  pipelineTriggers([[$class: 'PeriodicFolderTrigger', interval: '1d']]),
  parameters([
    string(name: 'API_URL', defaultValue: 'https://api.quantum-inspire.com/', description: 'Quantum Inspire API url'),
    string(name: 'API_CREDENTIALS_ID', defaultValue: 'api.quantum-inspire.com', description: 'Jenkins credentials ID'),
  ])
])
pipeline {
    agent {
        dockerfile {
              filename 'src/tests/Dockerfile.build'
              args '-v pip_cache:/var/pip_cache'
        }
    }
    triggers {
        cron(env.BRANCH_NAME == "feature/DEM-722/Jenkins" ? "H H(2-5) * * 1-5" : "")
    }
    stages {
        stage('Checkout modules') {
            steps {
                sh 'virtualenv venv'
                sh '''
                    . ./venv/bin/activate &&
                    pwd &&
                    ls -lah &&
                    # Installing qiskit-terra, qiskit-aer, qiskit-ibmq-provider and qiskit-ignis as separated
                    # (development) packages doesn't work as expected. As a workaround we install the qiskit
                    # packages from PyPI, uninstall and reinstall the development versions of qiskit packages
                    # afterwards.
                    pip install qiskit --cache-dir /var/pip_cache &&
                    # pip uninstall -y qiskit --cache-dir /var/pip_cache &&
                    # git clone https://github.com/Qiskit/qiskit &&
                    # pip install --upgrade ./qiskit --cache-dir /var/pip_cache -r ./qiskit/requirements-dev.txt &&
                    pip uninstall -y qiskit-terra --cache-dir /var/pip_cache &&
                    git clone https://github.com/Qiskit/qiskit-terra.git &&
                    pip install cython --cache-dir /var/pip_cache &&
            		pip install --upgrade ./qiskit-terra --cache-dir /var/pip_cache &&
            		# apt install libblas-dev &&
            		# pip uninstall -y qiskit-aer --cache-dir /var/pip_cache &&
                    # git clone https://github.com/Qiskit/qiskit-aer.git &&
                    # pip install --upgrade ./qiskit-aer --cache-dir /var/pip_cache &&
                    pip uninstall -y qiskit-ibmq-provider --cache-dir /var/pip_cache &&
		            git clone https://github.com/Qiskit/qiskit-ibmq-provider.git &&
    		        pip install --upgrade ./qiskit-ibmq-provider --cache-dir /var/pip_cache &&
    		        pip uninstall -y qiskit-ignis --cache-dir /var/pip_cache &&
                    git clone https://github.com/Qiskit/qiskit-ignis.git &&
            		pip install --upgrade ./qiskit-ignis --cache-dir /var/pip_cache
                   '''
            }
        }
        stage('Build') {
            steps {
                sh 'virtualenv venv'
                sh '''
                    . ./venv/bin/activate &&
                    pip install . --upgrade --cache-dir /var/pip_cache -r ./src/tests/requirements.txt
                   '''
           }
        }
        stage('Backend Test') {
            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: API_CREDENTIALS_ID,
                    usernameVariable: 'QI_EMAIL', passwordVariable: 'QI_PASSWORD']]) {
                    sh 'pwd'
                    sh 'set'
                    sh 'echo "API_URL: ${API_URL}"'
                    sh 'echo "API_CREDENTIALS_ID: ${API_CREDENTIALS_ID}"'
                    sh 'echo "QI_EMAIL: ${QI_EMAIL}"'
                    sh 'echo "QI_PASSWORD: ${QI_PASSWORD}"'
                    sh '. ./venv/bin/activate && python ./docs/example_qiskit_entangle.py'
                }
            }
        }
    }
}
